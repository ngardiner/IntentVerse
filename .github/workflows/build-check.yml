name: Build and Test Docker Images

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Job 1: Run fast unit tests first
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Core Service Image
        uses: docker/build-push-action@v5
        with:
          context: ./core
          push: false
          load: true

      - name: Run Unit Tests
        run: docker run --rm intentverse-core:latest pytest tests/test_filesystem_tool.py
        # Note: We use `docker run` here for speed, no networking needed.

  # Job 2: Run slower end-to-end tests only if unit tests pass
  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests # This job depends on the success of the 'unit-tests' job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # We need to build all images for the compose stack to be valid
      - name: Build All Services
        run: docker compose build

      - name: Start services
        run: docker compose up -d

      - name: Wait for services to be ready
        run: sleep 10 # A simple wait; more robust checks can be added later

      - name: Run End-to-End Tests
        run: docker compose run --rm core pytest tests/test_api_e2e.py

      # This step will always run, even if the tests fail, to ensure cleanup.
      - name: Stop services
        if: always()
        run: docker compose down